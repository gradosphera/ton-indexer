name: Docker Build and Push

on:
  push:

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' && needs.release.outputs.version_tag || needs.release.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Semantic Versioning
        id: semantic_version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "[*]"
          minor_pattern: "[+]"
          version_format: "${major}.${minor}.${patch}.dev${increment}"
          bump_each_commit: false

  docker:
    needs: release
    runs-on: ${{ matrix.arch.runner }}
    strategy:
      matrix:
        arch:
          - runner: ubuntu-24.04
            platform: amd64
          - runner: ubuntu-24.04-arm
            platform: arm64
        image:
          - image-name: ton-indexer-classifier
            context: indexer
            dockerfile: Dockerfile
          - image-name: ton-indexer-api
            context: ton-index-go
            dockerfile: Dockerfile
          - image-name: ton-indexer-worker
            context: ton-index-worker
            dockerfile: Dockerfile
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.context }}/${{ matrix.image.dockerfile }}
          platforms: linux/${{ matrix.arch.platform }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image.image-name }}:${{ needs.release.outputs.version }}-${{ matrix.arch.platform }}

  manifest:
    needs: [docker, release]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        image:
          - ton-indexer-classifier
          - ton-indexer-api
          - ton-indexer-worker
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:${{ needs.release.outputs.version }} \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:${{ needs.release.outputs.version }}-amd64 \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:${{ needs.release.outputs.version }}-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:${{ needs.release.outputs.version }}
      
      - name: Create Docker Manifest for Latest
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:latest \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:${{ needs.release.outputs.version }}-amd64 \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:${{ needs.release.outputs.version }}-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:latest

      - name: Create Git Tag
        if: github.ref == 'refs/heads/master'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.release.outputs.version }}',
              sha: context.sha
            })
